FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04

ENV DEBIAN_FRONTEND noninteractive

ENV CUDA_PATH /usr/local/cuda
ENV CUDA_INCLUDE_PATH /usr/local/cuda/include
ENV CUDA_LIBRARY_PATH /usr/local/cuda/lib64

# Ubuntu Packages
RUN apt-get update -y && apt-get install software-properties-common -y && \
    add-apt-repository -y multiverse && apt-get update -y && apt-get upgrade -y && \
    apt-get install -y apt-utils nano vim man build-essential wget sudo && \
    rm -rf /var/lib/apt/lists/*

# Install curl and other dependencies
RUN apt-get update -y && apt-get install -y curl libssl-dev openssl libopenblas-dev \
    libhdf5-dev hdf5-helpers hdf5-tools libhdf5-serial-dev libprotobuf-dev protobuf-compiler git

RUN apt-get update -q \
    && apt-get install -y \
    curl \
    git \
    libgl1-mesa-dev \
    libgl1-mesa-glx \
    libglfw3\
    libglew-dev \
    libosmesa6-dev \
    software-properties-common \
    net-tools \
    vim \
    virtualenv \
    wget \
    xpra \
    xserver-xorg-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*


RUN apt-get update
RUN add-apt-repository ppa:deadsnakes/ppa -y
RUN apt-get update && apt-get install -y python3.9 python3.9-distutils
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 2
RUN apt-get install -y python3-pip
RUN pip3 install --upgrade pip
RUN apt-get install -y python-apt --reinstall

RUN curl -o /usr/local/bin/patchelf https://s3-us-west-2.amazonaws.com/openai-sci-artifacts/manual-builds/patchelf_0.9_amd64.elf \
    && chmod +x /usr/local/bin/patchelf

ENV LANG C.UTF-8
#WORKDIR /

COPY ../requirements.txt requirements.txt
RUN pip3 install -r requirements.txt

RUN mkdir /install
WORKDIR /install

RUN pip3 install --upgrade setuptools
RUN pip3 install --upgrade pip
RUN pip3 install --upgrade distlib

RUN pip3 install jsonpickle==0.9.6
# install Sacred (from OxWhirl fork)

# RUN git clone https://github.com/oxwhirl/sacred.git /install/sacred && cd /install/sacred && python3 setup.py install
# RUN git clone https://github.com/IDSIA/sacred.git /install/sacred && cd /install/sacred && python3 setup.py install
RUN pip3 install git+https://github.com/IDSIA/sacred.git


RUN apt-get install -y htop iotop

# WORKDIR ./src
# MAMUJOCO
# RUN pip3 install git+https://github.com/schroederdewitt/multiagent_mujoco.git
# ## -- SMAC
RUN mkdir -p /root/.mujoco \
    && wget https://mujoco.org/download/mujoco210-linux-x86_64.tar.gz -O mujoco.tar.gz \
    && tar -xf mujoco.tar.gz -C /root/.mujoco \
    && rm mujoco.tar.gz

RUN pip3 install -U 'mujoco-py<2.2,>=2.1'
ENV LD_LIBRARY_PATH /root/.mujoco/mujoco210/bin:${LD_LIBRARY_PATH}


RUN pip3 install git+https://github.com/schroederdewitt/multiagent_mujoco.git
#ENV smac_ver 1
#RUN pip3 install git+https://github.com/oxwhirl/smac.git
#ENV SC2PATH /home/user/pymarl/3rdparty/StarCraftII


WORKDIR /mujoco_py
# Copy over just requirements.txt at first. That way, the Docker cache doesn't
# expire until we actually change the requirements.
#COPY ./requirements.txt /mujoco_py/
#COPY ./requirements.dev.txt /mujoco_py/
#RUN pip install --no-cache-dir -r requirements.txt
#RUN pip install --no-cache-dir -r requirements.dev.txt

COPY .. /mujoco_py

EXPOSE 8888

#WORKDIR /pymarl
#CMD line?